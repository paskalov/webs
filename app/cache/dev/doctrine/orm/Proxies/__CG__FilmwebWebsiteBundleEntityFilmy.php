<?php

namespace Proxies\__CG__\Filmweb\WebsiteBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Filmy extends \Filmweb\WebsiteBundle\Entity\Filmy implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'nazwa', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'rokPremiery', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'dlugosc', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'opis', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'cena', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'imgUrl', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'videoUrl', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'id', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'nazwaGatunku', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'nazwaAktora');
        }

        return array('__isInitialized__', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'nazwa', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'rokPremiery', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'dlugosc', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'opis', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'cena', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'imgUrl', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'videoUrl', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'id', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'nazwaGatunku', '' . "\0" . 'Filmweb\\WebsiteBundle\\Entity\\Filmy' . "\0" . 'nazwaAktora');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Filmy $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setNazwa($nazwa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNazwa', array($nazwa));

        return parent::setNazwa($nazwa);
    }

    /**
     * {@inheritDoc}
     */
    public function getNazwa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNazwa', array());

        return parent::getNazwa();
    }

    /**
     * {@inheritDoc}
     */
    public function setRokPremiery($rokPremiery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRokPremiery', array($rokPremiery));

        return parent::setRokPremiery($rokPremiery);
    }

    /**
     * {@inheritDoc}
     */
    public function getRokPremiery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRokPremiery', array());

        return parent::getRokPremiery();
    }

    /**
     * {@inheritDoc}
     */
    public function setDlugosc($dlugosc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDlugosc', array($dlugosc));

        return parent::setDlugosc($dlugosc);
    }

    /**
     * {@inheritDoc}
     */
    public function getDlugosc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDlugosc', array());

        return parent::getDlugosc();
    }

    /**
     * {@inheritDoc}
     */
    public function setOpis($opis)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOpis', array($opis));

        return parent::setOpis($opis);
    }

    /**
     * {@inheritDoc}
     */
    public function getOpis()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpis', array());

        return parent::getOpis();
    }

    /**
     * {@inheritDoc}
     */
    public function setCena($cena)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCena', array($cena));

        return parent::setCena($cena);
    }

    /**
     * {@inheritDoc}
     */
    public function getCena()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCena', array());

        return parent::getCena();
    }

    /**
     * {@inheritDoc}
     */
    public function setImgUrl($imgUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImgUrl', array($imgUrl));

        return parent::setImgUrl($imgUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getImgUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImgUrl', array());

        return parent::getImgUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addNazwaGatunku(\Filmweb\WebsiteBundle\Entity\Gatunki $nazwaGatunku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNazwaGatunku', array($nazwaGatunku));

        return parent::addNazwaGatunku($nazwaGatunku);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNazwaGatunku(\Filmweb\WebsiteBundle\Entity\Gatunki $nazwaGatunku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNazwaGatunku', array($nazwaGatunku));

        return parent::removeNazwaGatunku($nazwaGatunku);
    }

    /**
     * {@inheritDoc}
     */
    public function getNazwaGatunku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNazwaGatunku', array());

        return parent::getNazwaGatunku();
    }

    /**
     * {@inheritDoc}
     */
    public function addNazwaAktora(\Filmweb\WebsiteBundle\Entity\Aktorzy $nazwaAktora)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNazwaAktora', array($nazwaAktora));

        return parent::addNazwaAktora($nazwaAktora);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNazwaAktora(\Filmweb\WebsiteBundle\Entity\Aktorzy $nazwaAktora)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNazwaAktora', array($nazwaAktora));

        return parent::removeNazwaAktora($nazwaAktora);
    }

    /**
     * {@inheritDoc}
     */
    public function getNazwaAktora()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNazwaAktora', array());

        return parent::getNazwaAktora();
    }

    /**
     * {@inheritDoc}
     */
    public function setVideoUrl($videoUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVideoUrl', array($videoUrl));

        return parent::setVideoUrl($videoUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getVideoUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVideoUrl', array());

        return parent::getVideoUrl();
    }

}
